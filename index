<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>音乐播放器 - 晴天</title>
    <!-- 引入Google手写字体 -->
    <link href="https://fonts.googleapis.com/css2?family=Ma+Shan+Zheng&family=ZCOOL+QingKe+HuangYou&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            font-family: 'Ma Shan Zheng', 'ZCOOL QingKe HuangYou', cursive; /* 中文字体优先 */
            background: linear-gradient(to right, #ffffff 0%, #ffffff 30%, #e0e0e0 70%, #b0b0b0 100%);
            padding: 20px;
            color: #333;
        }
        
        .player-container {
            position: relative;
            width: 800px;
            height: 450px;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.25);
            background: linear-gradient(to right, rgba(255, 255, 255, 0.7) 0%, rgba(255, 255, 255, 0.4) 50%, rgba(0, 0, 0, 0.1) 100%), url('https://img2.kuwo.cn/star/albumcover/500/s3s94/93/211513640.jpg');
            background-size: cover;
            background-position: center;
            padding: 30px;
        }
        
        /* 歌曲信息 - 使用手写字体 */
        .song-info {
            position: absolute;
            top: 40px;
            left: 40px;
            color: #333;
            font-size: 32px;
            font-weight: 700;
            text-shadow: 0 2px 4px rgba(255, 255, 255, 0.8);
            letter-spacing: 1px;
            font-family: 'Ma Shan Zheng', 'ZCOOL QingKe HuangYou', cursive; /* 应用中文字体 */
        }
        
        /* 碟片样式 */
        .disc-container {
            position: absolute;
            right: -120px;
            top: 50%;
            transform: translateY(-50%);
            width: 320px;
            height: 320px;
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 10;
        }
        
        .disc {
            position: absolute;
            width: 280px;
            height: 280px;
            border-radius: 50%;
            background: url('https://img2.kuwo.cn/star/albumcover/500/s3s94/93/211513640.jpg');
            background-size: cover;
            background-position: center;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.4);
            animation: rotate 20s linear infinite;
            transition: animation-play-state 0.3s ease;
        }
        
        .disc-inner {
            position: absolute;
            width: 70px;
            height: 70px;
            border-radius: 50%;
            background: #1a1a1a;
            box-shadow: 0 0 0 8px rgba(255, 255, 255, 0.1);
            z-index: 11;
        }
        
        .disc::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            border-radius: 50%;
            background: radial-gradient(circle, transparent 30%, rgba(0, 0, 0, 0.8) 100%);
        }
        
        /* 控制按钮 */
        .controls {
            position: absolute;
            top: 40px;
            right: 40px;
            display: flex;
            gap: 15px;
            z-index: 20;
        }
        
        .control-btn {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: none;
            background: rgba(255, 255, 255, 0.9);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            cursor: pointer;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
            transition: all 0.3s ease;
            font-family: Arial, sans-serif;
            font-weight: bold;
        }
        
        .control-btn:hover {
            transform: scale(1.1);
            background: rgba(255, 255, 255, 1);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
        }
        
        /* 欢迎文本 - 使用手写字体 */
        .welcome-text {
            position: absolute;
            bottom: 120px;
            left: 40px;
            font-size: 36px;
            font-weight: 700;
            color: #333;
            text-shadow: 0 2px 4px rgba(255, 255, 255, 0.8);
            letter-spacing: 1.5px;
            font-family: 'Ma Shan Zheng', 'ZCOOL QingKe HuangYou', cursive; /* 应用中文字体 */
        }
        
        /* 声波动画 - 修改为黑色细矩形 */
        .visualizer {
            position: absolute;
            bottom: 40px;
            left: 40px;
            width: 400px;
            height: 60px;
            display: flex;
            align-items: flex-end;
            gap: 2px;
        }
        
        .bar {
            width: 6px;
            background: #000000; /* 纯黑色 */
            border-radius: 0; /* 矩形直角 */
            opacity: 0.8;
            transition: height 0.1s ease;
        }
        
        /* 时间显示 */
        .time-display {
            position: absolute;
            bottom: 105px;
            left: 40px;
            font-size: 16px;
            color: #555;
            text-shadow: 0 1px 1px rgba(255, 255, 255, 0.7);
            font-weight: 500;
            font-family: 'Ma Shan Zheng', 'ZCOOL QingKe HuangYou', cursive; /* 应用中文字体 */
        }
        
        /* 动画 */
        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
        
        .paused {
            animation-play-state: paused;
        }
        
        /* 新增装饰元素 */
        .decoration {
            position: absolute;
            opacity: 0.1;
            pointer-events: none;
        }
        
        .decoration-1 {
            top: 30%;
            left: 10%;
            font-size: 60px;
            transform: rotate(-15deg);
            font-family: 'Ma Shan Zheng', cursive;
            color: #333;
        }
        
        .decoration-2 {
            bottom: 30%;
            right: 25%;
            font-size: 40px;
            transform: rotate(10deg);
            font-family: 'Ma Shan Zheng', cursive;
            color: #333;
        }
    </style>
</head>
<body>
    <div class="player-container">
        <div class="song-info">晴天 - 周杰伦</div>
        
        <div class="controls">
            <button class="control-btn" id="prev">◀◀</button>
            <button class="control-btn" id="playPause">▶</button>
            <button class="control-btn" id="next">▶▶</button>
        </div>
        
        <div class="disc-container">
            <div class="disc"></div>
            <div class="disc-inner"></div>
        </div>
        
        <div class="welcome-text">《欢迎光临我的朋友圈》</div>
        
        <div class="time-display" id="timeDisplay">00:00 / 00:00</div>
        
        <div class="visualizer" id="visualizer">
            <!-- 声波条将通过JavaScript动态生成 -->
        </div>
        
        <!-- 装饰元素 -->
        <div class="decoration decoration-1">音乐</div>
        <div class="decoration decoration-2">旋律</div>
        
        <audio id="audioPlayer" src="https://er-sycdn.kuwo.cn/5e8ebbbc5bbd8974b5bcbdeed03eee2c/68bbc8a3/resource/30106/trackmedia/M5000039MnYb0qxYhV.mp3?bitrate=128&from=vip"></audio>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const audio = document.getElementById('audioPlayer');
            const playPauseBtn = document.getElementById('playPause');
            const prevBtn = document.getElementById('prev');
            const nextBtn = document.getElementById('next');
            const disc = document.querySelector('.disc');
            const visualizer = document.getElementById('visualizer');
            const timeDisplay = document.getElementById('timeDisplay');
            
            // 创建更多更细的声波条
            for (let i = 0; i < 60; i++) {
                const bar = document.createElement('div');
                bar.className = 'bar';
                bar.style.height = `${Math.random() * 30 + 5}px`;
                visualizer.appendChild(bar);
            }
            
            const bars = document.querySelectorAll('.bar');
            
            // 更新时间显示
            function updateTimeDisplay() {
                const currentTime = formatTime(audio.currentTime);
                const duration = formatTime(audio.duration || 0);
                timeDisplay.textContent = `${currentTime} / ${duration}`;
            }
            
            // 时间格式化
            function formatTime(seconds) {
                const mins = Math.floor(seconds / 60);
                const secs = Math.floor(seconds % 60);
                return `${mins}:${secs < 10 ? '0' : ''}${secs}`;
            }
            
            // 播放/暂停功能
            playPauseBtn.addEventListener('click', function() {
                if (audio.paused) {
                    audio.play();
                    disc.classList.remove('paused');
                    playPauseBtn.innerHTML = '❚❚';
                    animateBars();
                } else {
                    audio.pause();
                    disc.classList.add('paused');
                    playPauseBtn.innerHTML = '▶';
                }
            });
            
            // 上一曲和下一曲按钮
            prevBtn.addEventListener('click', function() {
                // 这里可以添加切换到上一曲的逻辑
                alert('切换到上一曲');
            });
            
            nextBtn.addEventListener('click', function() {
                // 这里可以添加切换到下一曲的逻辑
                alert('切换到下一曲');
            });
            
            // 声波动画 - 更细腻的效果
            function animateBars() {
                if (audio.paused) return;
                
                for (let i = 0; i < bars.length; i++) {
                    // 更细腻的高度变化，模拟声波
                    const height = 5 + Math.sin(Date.now() / 200 + i * 0.2) * 25 + Math.random() * 10;
                    bars[i].style.height = `${height}px`;
                    
                    // 保持纯黑色，不再随音乐时间变化颜色
                    bars[i].style.background = '#000000';
                    
                    // 根据高度调整透明度，增加层次感
                    bars[i].style.opacity = 0.6 + (height / 60) * 0.4;
                }
                
                updateTimeDisplay();
                requestAnimationFrame(animateBars);
            }
            
            // 初始随机声波高度
            for (let i = 0; i < bars.length; i++) {
                bars[i].style.height = `${Math.random() * 30 + 5}px`;
            }
            
            // 音频加载时更新持续时间
            audio.addEventListener('loadedmetadata', function() {
                updateTimeDisplay();
            });
            
            // 音频时间更新
            audio.addEventListener('timeupdate', function() {
                updateTimeDisplay();
            });
            
            // 音频结束时重置
            audio.addEventListener('ended', function() {
                disc.classList.add('paused');
                playPauseBtn.innerHTML = '▶';
                
                // 停止声波动画
                for (let i = 0; i < bars.length; i++) {
                    bars[i].style.height = '5px';
                }
            });
        });
    </script>
</body>
</html>
